version: '3'
services:
  manager:
    build:
      context: ./centralmanager
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    expose:
      - "8081"
    environment:
      - MANAGER_SERVICE_PORT=8081
      - COUNT_WORKERS=2
      - RABBIT_HOST=rabbitmq
      - MONGO_URI=mongo1:27017,mongo2:27017,mongo3:27017/crack_db?replicaSet=rs0
    links:
      - mongo1
      - mongo2
      - mongo3
      - rabbitmq
    networks:
      - my-network

  worker:
    build:
      context: ./worker
      dockerfile: Dockerfile
    deploy:
      mode: replicated
      replicas: 2
    links:
      - rabbitmq
    environment:
      - RABBIT_HOST=rabbitmq
    networks:
      - my-network

  rabbitmq:
    image: rabbitmq:latest
    restart: always
    ports:
      - "5672:5672"
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: pass
      RABBITMQ_DEFAULT_VHOST: /
      MANGER_TO_WORKER_QUEUE: worker.input.queue
      MANGER_TO_WORKER_EXCHANGE: worker.input.exchange
      MANGER_TO_WORKER_ROUTING: worker.input.routing
      WORKER_TO_MANAGER_QUEUE: manager.input.queue
      WORKER_TO_MANAGER_EXCHANGE: manager.input.exchange
      WORKER_TO_MANAGER_ROUTING: manager.input.routing
    networks:
      - my-network

  mongo1:
    container_name: mongo1
    image: mongo:4.4
    command: bash -c "mongod --replSet rs0 --bind_ip_all && ./scripts/init.sh"
    ports:
      - "27017:27017"
    volumes:
      - ~/mongors/data1:/data/db
      - ./rs-init.sh:/scripts/init.sh
    networks:
      - my-network
    depends_on:
      - mongo2
      - mongo3
    links:
      - mongo2
      - mongo3
    restart: always

  mongo2:
    container_name: mongo2
    image: mongo:4.4
    volumes:
      - ~/mongors/data2:/data/db
    networks:
      - my-network
    restart: always
    command: mongod --bind_ip_all --replSet rs0

  mongo3:
    container_name: mongo3
    image: mongo:4.4
    volumes:
      - ~/mongors/data3:/data/db
    networks:
      - my-network
    restart: always
    command: mongod --bind_ip_all --replSet rs0

networks:
  my-network:
    driver: bridge

volumes:
  mongo_data: